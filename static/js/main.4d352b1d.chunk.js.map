{"version":3,"sources":["CovidTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CovidTable","data","totalCase","className","TableData","state","confirmed","active","recovered","deaths","lastupdatedtime","map","App","useState","covidData","setCovidData","isLoading","setIsLoading","isError","setIsError","fetchData","a","fetch","res","json","statewise","console","log","useEffect","onClick","href","rel","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d352b1d.chunk.js","sourcesContent":["import React from \"react\";\nimport { StateData } from \"./App\";\n\nfunction CovidTable({ data = [] }: { data: StateData[] }) {\n  const totalCase = data[0];\n  const heading = {\n    state: \"State\",\n    confirmed: \"Confirmed\",\n    active: \"Active\",\n    recovered: \"Recovered\",\n    deaths: \"Deaths\",\n    lastupdatedtime: \"Last updated on\",\n  };\n  return (\n    <div>\n      <table className=\"tw-min-w-full tw-table-auto\">\n        <thead className=\"\">\n          <TableData {...heading} />\n        </thead>\n        <tbody className=\"tw-bg-gray-200\">\n          {data.map(\n            ({\n              state,\n              confirmed,\n              active,\n              recovered,\n              deaths,\n              lastupdatedtime,\n            }) =>\n              state === \"State Unassigned\" || state === \"Total\" ? null : (\n                <tr\n                  key={state}\n                  className=\"tw-bg-white tw-border-4 tw-border-gray-200 tw-text-center\"\n                >\n                  <td className=\"tw-px-16 tw-py-2\">\n                    <span className=\"tw-text-gray-800\">{state}</span>\n                  </td>\n                  <td className=\"tw-px-16 tw-py-2 other-case\">\n                    <span className=\"tw-text-gray-800\">{confirmed}</span>\n                  </td>\n                  <td className=\"tw-px-16 tw-py-2 other-case\">\n                    <span className=\"tw-text-gray-800\">{active}</span>\n                  </td>\n                  <td className=\"tw-px-16 tw-py-2 other-case\">\n                    <span className=\"tw-text-gray-800\">{recovered}</span>\n                  </td>\n                  <td className=\"tw-px-16 tw-py-2 death\">\n                    <span className=\"tw-text-gray-800\">{deaths}</span>\n                  </td>\n                  <td className=\"tw-px-16 tw-py-2\">\n                    <span className=\"tw-text-gray-800\">{lastupdatedtime}</span>\n                  </td>\n                </tr>\n              )\n          )}\n        </tbody>\n        <tfoot>\n          <TableData {...totalCase} />\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n\nexport default CovidTable;\n\ntype TableProp = {\n  state: string;\n  confirmed: number | string;\n  active: number | string;\n  recovered: number | string;\n  deaths: number | string;\n  lastupdatedtime: string;\n};\n\nfunction TableData({\n  state,\n  confirmed,\n  active,\n  recovered,\n  deaths,\n  lastupdatedtime,\n}: TableProp) {\n  return (\n    <tr className=\"tw-bg-gray-800\">\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{state}</span>\n      </th>\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{confirmed}</span>\n      </th>\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{active}</span>\n      </th>\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{recovered}</span>\n      </th>\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{deaths}</span>\n      </th>\n      <th className=\"tw-px-16 tw-py-2\">\n        <span className=\"tw-text-gray-300\">{lastupdatedtime}</span>\n      </th>\n    </tr>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport CovidTable from \"./CovidTable\";\n\nexport type StateData = {\n  active: number;\n  confirmed: number;\n  deaths: number;\n  deltaconfirmed: number;\n  deltadeaths: number;\n  deltarecovered: number;\n  lastupdatedtime: string;\n  migratedother: number;\n  recovered: number;\n  state: string;\n  statecode: string;\n  statenotes: string;\n};\n\nfunction App(): JSX.Element {\n  const [covidData, setCovidData] = useState<StateData[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const URL = \"https://api.covid19india.org/data.json\";\n      const res = await fetch(URL);\n      const data = await res.json();\n      setCovidData(data.statewise);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n      setIsError(true);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"tw-flex tw-justify-center tw-flex-col tw-items-center\">\n      <h1 className=\"tw-text-5xl tw-font-extralight tw-my-10\">\n        <span className=\"tw-font-normal\">INDIA</span> Covid-19 Dashboard\n      </h1>\n      {isLoading ? (\n        <p className=\"tw-text-base\">Loading...</p>\n      ) : isError ? (\n        <>\n          <p className=\"tw-text-lg\">\n            We are facing some issue while fetching data.\n          </p>\n          <button\n            className=\"tw-mt-4 tw-mb-6 tw-inline-block tw-px-6 tw-py-2 tw-text-xs tw-font-medium tw-leading-6 tw-text-center tw-text-black tw-uppercase tw-transition tw-bg-gray-100 tw-rounded tw-shadow tw-ripple hover:tw-shadow-lg hover:tw-bg-gray-200 focus:tw-outline-none\"\n            onClick={fetchData}\n          >\n            Try again\n          </button>\n        </>\n      ) : (\n        <CovidTable data={covidData} />\n      )}\n      <footer className=\"tw-my-3\">\n        Made With ❤️ by{\" \"}\n        <a\n          className=\"tw-underline\"\n          href=\"https://shailesh-parmar.netlify.app/\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Shailesh Parmar\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}